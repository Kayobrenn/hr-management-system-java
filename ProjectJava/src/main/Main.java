package main;

import controller.FuncionarioController;
import controller.SetorController;
import controller.UsuarioController;
import enums.Sexo;
import model.Setor;

import java.util.Scanner;

public class Main {

    public static Scanner scanner = new Scanner(System.in);
    private static SetorController setorController = new SetorController();
    private static FuncionarioController funcionarioController = new FuncionarioController();
    private static UsuarioController usuarioController = new UsuarioController();

    public static void main(String[] args) throws InterruptedException {
        System.out.println("======================================================");
        System.out.println("                üöÄ  BEM-VINDO AO SISTEMA               ");
        System.out.println("                    üíº RH MANAGER                      ");
        System.out.println("------------------------------------------------------");
        System.out.println("       Sistema de Gest√£o de Funcion√°rios e Setores     ");
        System.out.println("------------------------------------------------------");
        System.out.println("¬© 2025 - Todos os direitos reservados.                ");
        System.out.println("Desenvolvido por: Kayo Brenno Gomes Cunha              ");
        System.out.println("Estudante de Ci√™ncia da Computa√ß√£o - UNIESP            ");
        System.out.println("------------------------------------------------------");
        System.out.println("Vers√£o: 1.0                                            ");
        System.out.println("======================================================");
        System.out.println();


        System.out.println("Iniciando Sistema...");
        Thread.sleep(3000);
        System.out.println();

        telaInicial();
    }

    private static void telaInicial() throws InterruptedException {
        while (true) {
            System.out.println("=========================================================");
            System.out.println("                   üî∞  TELA INICIAL                      ");
            System.out.println("---------------------------------------------------------");
            System.out.println("                 üîê  [1] Entrar                          ");
            System.out.println("                 üìù  [2] Cadastrar-se                    ");
            System.out.println("                 ‚ùå  [0] Sair                             ");
            System.out.println("=========================================================");
            System.out.print(" üî∏ Escolha uma op√ß√£o: ");

            String opcao = scanner.nextLine();

            switch (opcao) {
                case "1":
                    telaDeLogin();
                    break;
                case "2":
                    cadastrarUsuario();
                    break;
                case "0":
                    System.out.println("\nEncerrando o sistema... üëã");
                    System.exit(0);
                    break;
                default:
                    System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.\n");
            }
        }
    }

    private static void telaDeLogin() throws InterruptedException {
        System.out.println("=========================================================");
        System.out.println("                    üîê  TELA DE LOGIN                    ");
        System.out.println("---------------------------------------------------------");
        System.out.println("    Informe seu usu√°rio e senha para acessar o sistema.  ");
        System.out.println("=========================================================");
        System.out.println();

        boolean autenticado = false;
        int tentativas = 0;

        while (!autenticado && tentativas < 3) {
            System.out.print("üë§ Usu√°rio: ");
            String username = scanner.nextLine();
            System.out.print("üîë Senha  : ");
            String senha = scanner.nextLine();

            if (usuarioController.login(username, senha)) {
                autenticado = true;
                System.out.println("\n‚úÖ Login bem-sucedido! Acessando sistema...");
                Thread.sleep(1500);
                menuPrincipal();
            } else {
                System.out.println("\n‚ùå Usu√°rio ou senha inv√°lidos.\n");
                tentativas++;
            }
        }

        if (!autenticado) {
            System.out.println("\n‚ö†Ô∏è  N√∫mero de tentativas excedido. Retornando √† tela inicial.\n");
            Thread.sleep(1500);
        }
    }

    private static void menuPrincipal() {
        boolean sair = false;

        while (!sair) {
            System.out.println("==========================================================");
            System.out.println("                        üìã MENU PRINCIPAL                 ");
            System.out.println("----------------------------------------------------------");
            System.out.println(" üè¢ [1] Gest√£o de Setores");
            System.out.println(" üë• [2] Gest√£o de Funcion√°rios");
            System.out.println(" üîê [3] Gest√£o de Usu√°rios");
            System.out.println("----------------------------------------------------------");
            System.out.println(" ‚ùå [0] Sair para tela de login");
            System.out.println("==========================================================");
            System.out.print(" üî∏ Escolha uma op√ß√£o: ");

            String opcao = scanner.nextLine();

            switch (opcao) {
                case "1":
                    menuSetor();
                    break;
                case "2":
                    menuFuncionario();
                    break;
                case "3":
                    menuUsuarios();
                    break;
                case "0":
                    sair = true;
                    System.out.println("\nSaindo do sistema... Obrigado por utilizar o RH Manager!");
                    System.out.println("At√© a pr√≥xima! üëã\n");
                    break;
                default:
                    System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.\n");
            }
        }
    }

    private static void menuSetor() {
        System.out.println("==========================================================");
        System.out.println("                 üè¢ GEST√ÉO DE SETORES                     ");
        System.out.println("----------------------------------------------------------");
        System.out.println(" ‚ûï [1] Cadastrar Setor");
        System.out.println(" ‚ùå [2] Excluir Setor");
        System.out.println(" üìë [3] Listar Setores");
        System.out.println("----------------------------------------------------------");
        System.out.println(" üîô [0] Voltar ao Menu Principal");
        System.out.println("==========================================================");
        System.out.print(" üî∏ Escolha uma op√ß√£o: ");

        String opcao = scanner.nextLine();

        switch (opcao) {
            case "1":
                cadastrarSetor();
                break;
            case "2":
                excluirSetor();
                break;
            case "3":
                setorController.listarSetores();
                break;
            case "0":
                menuPrincipal();
                break;
            default:
                System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.\n");
        }
    }


    private static void excluirSetor() {
        System.out.println("=========================================================");
        System.out.println("                   ‚ùå EXCLUIR SETOR                      ");
        System.out.println("---------------------------------------------------------");
        System.out.print("üî∏ Digite o nome do setor que deseja excluir: ");
        String nomeSetor = scanner.nextLine();

        boolean excluido = setorController.excluirSetor(nomeSetor);
        if (excluido) {
            System.out.println("\n‚úÖ Setor exclu√≠do com sucesso!\n");
        } else {
            System.out.println("\n‚ùå Setor com nome informado n√£o encontrado.\n");
        }
    }


    private static void cadastrarSetor() {
        System.out.println("===========================================================");
        System.out.println("                üè¢ CADASTRO DE SETOR                       ");
        System.out.println("-----------------------------------------------------------");
        System.out.println("Preencha as informa√ß√µes para cadastrar ou excluir um setor.");
        System.out.println("===========================================================");
        System.out.println();
        System.out.print("üî∏ Digite o nome do setor: ");
        String nome = scanner.nextLine();

        System.out.print("üî∏ Digite a descri√ß√£o do setor: ");
        String descricao = scanner.nextLine();

        setorController.cadastrarOuExcluirSetor(nome, descricao);
    }

    private static void menuFuncionario() {
        System.out.println("==========================================================");
        System.out.println("                üë• GEST√ÉO DE FUNCION√ÅRIOS                 ");
        System.out.println("----------------------------------------------------------");
        System.out.println(" ‚ûï [1] Cadastrar Funcion√°rio");
        System.out.println(" ‚ùå [2] Excluir Funcion√°rio");
        System.out.println(" üìë [3] Listar Funcion√°rios");
        System.out.println("----------------------------------------------------------");
        System.out.println(" üîô [0] Voltar ao Menu Principal");
        System.out.println("==========================================================");
        System.out.print(" üî∏ Escolha uma op√ß√£o: ");

        String opcao = scanner.nextLine();

        switch (opcao) {
            case "1":
                cadastrarFuncionario();
                break;
            case "2":
                excluirFuncionario();
                break;
            case "3":
                funcionarioController.listarFuncionarios();
                break;
            case "0":
                menuPrincipal();
                break;
            default:
                System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.\n");
        }
    }


    private static void cadastrarFuncionario() {
        System.out.println("=========================================================");
        System.out.println("              üë®‚Äçüíº CADASTRO DE FUNCION√ÅRIO                 ");
        System.out.println("---------------------------------------------------------");
        System.out.println("  Preencha as informa√ß√µes para cadastrar um funcion√°rio. ");
        System.out.println("=========================================================");
        System.out.println();

        System.out.print("üî∏ Digite o nome do funcion√°rio: ");
        String nome = scanner.nextLine();

        System.out.print("üî∏ Digite o CPF: ");
        String cpf = scanner.nextLine();

        System.out.print("üî∏ Digite o RG: ");
        String rg = scanner.nextLine();

        System.out.print("üî∏ Digite a data de nascimento: ");
        String dataNascimento = scanner.nextLine();

        System.out.print("üî∏ Digite a idade: ");
        int idade;
        try {
            idade = Integer.parseInt(scanner.nextLine());
        } catch (NumberFormatException e) {
            System.out.println("Idade inv√°lida!");
            return;
        }

        System.out.print("üî∏ Digite o Estado C√≠vil: ");
        String estadoCivil = scanner.nextLine();

        System.out.print("üî∏ Digite o Cargo: ");
        String cargo = scanner.nextLine();

        System.out.print("üî∏ Digite a data de admiss√£o (dd/MM/yyyy): ");
        String dataAdmissao = scanner.nextLine();

        System.out.print("üî∏ Digite o sal√°rio: ");
        String salario = scanner.nextLine();

        System.out.print("üî∏ Tipo de pagamento (Mensal ou Quinzenal): ");
        String tipoPagamento = scanner.nextLine();

        System.out.print("üî∏ Digite o email: ");
        String email = scanner.nextLine();

        System.out.print("üî∏ Digite o telefone: ");
        String telefone = scanner.nextLine();

        System.out.print("üî∏ Digite o sexo: (Masculino, Feminino ou Outros): ");
        Sexo sexo;
        try {
            sexo = Sexo.valueOf(scanner.nextLine().toUpperCase());
        } catch (IllegalArgumentException e) {
            System.out.println("Sexo inv√°lido!");
            return;
        }

        System.out.print("üî∏ Informe o nome do setor que ele pertence: ");
        String nomeSetor = scanner.nextLine();
        Setor setor = setorController.buscarSetorPorNome(nomeSetor);

        funcionarioController.cadastrarFuncionario(nome, cpf, rg, idade, dataNascimento, email, telefone, sexo,
                                                    setor, cargo, dataAdmissao, salario, tipoPagamento, estadoCivil);
    }

    private static void excluirFuncionario() {
        System.out.println("=========================================================");
        System.out.println("              ‚ùå EXCLUIR FUNCION√ÅRIO                     ");
        System.out.println("---------------------------------------------------------");
        System.out.print("üî∏ Digite o CPF do funcion√°rio que deseja excluir: ");
        String cpf = scanner.nextLine();

        boolean sucesso = funcionarioController.excluirFuncionario(cpf);
        if (sucesso) {
            System.out.println("\n‚úÖ Funcion√°rio exclu√≠do com sucesso!\n");
        } else {
            System.out.println("\n‚ùå Funcion√°rio n√£o encontrado.\n");
        }
    }


    private static void cadastrarUsuario() {
        System.out.println("=========================================================");
        System.out.println("                 üìù CADASTRO DE USU√ÅRIO                  ");
        System.out.println("---------------------------------------------------------");
        System.out.println("  Crie seu nome de usu√°rio e senha para acessar o sistema");
        System.out.println("=========================================================");
        System.out.println();

        System.out.print("üë§ Nome de usu√°rio: ");
        String username = scanner.nextLine();

        System.out.print("üîë Senha: ");
        String senha = scanner.nextLine();

        usuarioController.cadastrarUsuario(username, senha);
        System.out.println("\n‚úÖ Usu√°rio cadastrado com sucesso!\n");
    }

    private static void menuUsuarios() {
        System.out.println("==========================================================");
        System.out.println("                   üîê GEST√ÉO DE USU√ÅRIOS                  ");
        System.out.println("----------------------------------------------------------");
        System.out.println(" ‚ûï [1] Cadastrar Usu√°rio");
        System.out.println(" üìë [2] Listar Usu√°rios");
        System.out.println("----------------------------------------------------------");
        System.out.println(" üîô [0] Voltar ao Menu Principal");
        System.out.println("==========================================================");
        System.out.print(" üî∏ Escolha uma op√ß√£o: ");

        String opcao = scanner.nextLine();

        switch (opcao) {
            case "1":
                cadastrarUsuario();
                break;
            case "2":
                usuarioController.listarUsuarios();
                break;
            case "0":
                menuPrincipal();
                break;
            default:
                System.out.println("\n‚ùå Op√ß√£o inv√°lida! Tente novamente.\n");
        }
    }
}
